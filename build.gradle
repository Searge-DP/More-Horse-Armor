buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
    maven {
        name = "Epoxide"
        url = "http://maven.cubedlc.com"
    }
    maven {
        name = "rx14"
        url = "http://mvn.rx14.co.uk/local/"
    }
    ivy {
        name "rx14"
        artifactPattern "http://mvn.rx14.co.uk/local/com/azanor/baubles/Baubles/1.7.10-1.0.1.9.3/[module]-[classifier]-[revision].[ext]"
    }
    ivy {
        name "Botania"
        artifactPattern "http://botaniamod.net/files/deobf/[module] [revision]-[classifier].[ext]"
    }
}

apply plugin: 'forge'

version = "1.0"
group = "net.epoxide.mha" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "MHA"

minecraft {
    version = "1.7.10-10.13.4.1517-1.7.10"
    runDir = "eclipse"
}

dependencies {
    compile "net.darkhax.bookshelf:Bookshelf:1.0.0:deobf"
    compile name: "Botania" , version: "r1.7-224", classifier: "deobf"
    compile name: "Baubles" , version: "1.7.10-1.0.1.9.3", classifier: "deobf"

}

task buildInfo() {
    def cmd = "git rev-parse --short HEAD"
    def proc = cmd.execute()
    proc.waitFor()
    if (proc.exitValue() == 0) {
        ext.revision = "DEV." + proc.text.trim()
    } else {
        ext.revision = "GITBORK"
    }

    if (System.getenv().BUILD_NUMBER != null) {
        ext.buildNum = "${System.getenv().BUILD_NUMBER}"
    } else {
        ext.buildNum = "${project.buildInfo.revision}"
    }
}

ext.artifact_version = 'NFG'
if (System.getenv().ARTIFACT_VERSION == null) {
    artifact_version = "${version}.${project.buildInfo.buildNum}"
}

if(System.getenv().ARTIFACT_VERSION != null) {
    artifact_version = "${system.getenv().ARTIFACT_VERSION}"
}

version = "1.7.10-${artifact_version}"

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.artifact_version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.artifact_version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {

    from sourceSets.main.output
    classifier = 'deobf'
}

artifacts {

    archives deobfJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file:///var/www/html/maven")
        }
    }
}